#!/usr/bin/env bash

trap 'exit 1' HUP INT QUIT TERM ERR

set -e -u -o pipefail

CMD="$(basename $0)"
BIN="$(dirname "$0")"

function usage {
    (echo "Usage: $CMD [-dhnv] url target-file"
     echo "-h        Print this help message."
     echo "-n        Dry run. Don't execute commands."
     echo "-v        Verbose. Print extra information if appropriate."
     echo "Fetch J3 paper from 'url' and place in 'target-file'.") 1>&2
}

. $(dirname "$0")/vecho

DRY_RUN=
ECHO=
VFLAG=0
VOPT=
while getopts hnv\? OPTCHAR; do
    case $OPTCHAR in
        h)  usage; exit 0;;
        n)  DRY_RUN=1 ECHO=echo;;
        v)  VFLAG=$((VFLAG+1))
            if [[ -z "$VOPT" ]]; then
                VOPT=-v
            else
                VOPT=${VOPT}v
            fi;;
    esac
done

shift $(($OPTIND - 1))

case $# in
    2)  URL="$1" TARGET_FILE="$2";;
    *)  usage; exit 1;;
esac

# Run "curl" to get the file.
# Place in the correct papers/ document file.
# Link the meetings/ file to that file.
# Link the years/ file to the papers file.
vecho 2 "  URL='$URL' TARGET_FILE='$TARGET_FILE'"

if [[ -e "$TARGET_FILE" ]] && [[ ! -w "$TARGET_FILE" ]]; then
    # Make files writable for updates
    chmod +w "$TARGET_FILE"
fi

if ! curl --fail -Ss "$URL" 2>&1 >"$TARGET_FILE"; then
    echo "$CMD: Fail to fetch '$TARGET_FILE' from '$URL'" 1>&2
fi

if [[ -w "$TARGET_FILE" ]]; then
    # Make files readonly to prevent accidental editing
    chmod -w "$TARGET_FILE"
fi
