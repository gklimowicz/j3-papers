To: J3                                                     J3/24-174
From: Bill Long
Subject:  OpenMP report
Date: 2024-October-21


Provided mainly by Deepak Eachempati, HPE's rep to the OpenMP
committee.

A comment draft for the OpenMP 6.0 specification, TR13, was released
in August. The language committee has nearly completed a final round
of quality-control changes to the specification, and it will be
released at SC24.

Here is a list of significant changes that have been enacted since
last OpenMP status report:

* The ref-modifier (which can be ref_ptr, ref_ptee, or ref_ptr_ptee)
  can now be specified in a 'map' clause for list items that are
  Fortran allocatables or pointers to control whether the map should
  pertain to the storage of the descriptor ('ref_ptr'), the storage
  referenced by that descriptor ('ref_ptee'), or both
  ('ref_ptr_ptee'). This can be particularly helpful in specifying a
  user-defined mapper for a derived type that contains allocatable or
  pointer components. The ref-modifier can also be specified for
  reference members of a structure in C++.

* The 'automap' modifier may now be specified in a 'declare target'
  'enter' clause that applies to a Fortran allocatable. When the
  allocatable is allocated, the modifier causes the implementation to
  automatically map the allocated storage. Similarly, when the
  allocatable is deallocated, the modifier causes the implementation
  to automatically delete the corresponding allocated storage from the
  device and remove it from the mapping table.

* The 'target_data' construct is now surrounded by an implicit
  'taskgroup' region by default. The region can be elided with the use
  of the 'nogroup' clause.

* The 'storage' map type was added as a preferred synonym for the
  'alloc' and 'release' map types.

* Information for interoperating with the HSA runtime API was added to
  the Additional Definitions document (which will be made available on
  the OpenMP website).

An OpenMP 6.0 reference guide is being prepared, and should be
available for download from the OpenMP website by the week of
SC24. Hard copies of the reference guide should also be available at
the OpenMP booth.  An Examples document that has additional OpenMP 5.2
examples and some new 6.0 examples is also being prepared for release
at SC24 or shortly thereafter. Other OpenMP-related events at SC24:

* Tutorial: "PyOMP: Parallel Programming in Python with OpenMP"
* Tutorial: "Programming Your GPU with OpenMP: A Hands-On Introduction"

* Exhibitor: "Parallel Debugging Essentials: Exploring OpenMP, MPI,
* and GPU Methods" BOF: "OpenMP API Version 6.0 Is Here!" (includes
* vendor lightning talks and review of the OpenMP 6.0 API)

The OpenMP booth in the exhibitor hall will, as usual, include
presentations and Q&A sessions with experts throughout the week.



>
